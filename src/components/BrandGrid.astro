---

   const { myTitle, brands } = Astro.props as Props;

    const numColumns = 4; // Specify the number of columns
    const numRows = 2; // Specify the number of rows 

    type Brand = {
      name: string;
      logo: string;
    };

    type Props = {
      myTitle: string;
      brands: Brand[];
    };
---
  
  <div>
    <p class="myClass">{myTitle}</p>
    <div class="container">
      <div class="brand-grid" style={`--num-columns: ${numColumns}; --num-rows: ${numRows};`}>
        {brands.map((brand) => (
          <div class="brand-item">
            <img src={brand.logo} alt={`${brand.name} logo`} />
          </div>
        ))}
      </div>
    </div>
  </div>

  <style>
    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 10vh;
    }
    .brand-grid {
      display: grid;
      grid-template-columns: repeat(var(--num-columns), 1fr);
      grid-template-rows: repeat(var(--num-rows), auto);
      gap: 16px;
      padding: 16px;
    }
    .brand-item {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .brand-item img {
      max-width: 100%;
      max-height: 100px;
      object-fit: contain;
      object-fit: contain;
    border-radius: 8px; /* Added border-radius for rounded edges */
    }
    .myClass{
      justify-content: center;
      text-align: center;
      height: 20px;
      font-style: italic;
    }
  </style>